p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage)) +
geom_bar(stat = "identity", width=0.7, color=dose)
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage)) +
geom_bar(stat = "identity", width=0.7, color=Product)
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7)
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7)
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7, fill = "white")
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7, fill = "white") + theme_minimal()
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7) + theme_minimal()
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7, fill="white") + theme_minimal()
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7, fill="white") + theme_minimal()
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
ghgPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=single$Product, y=single$GHG.Emissions, color = Product)) +
geom_bar(stat="identity", fill="white") + theme_minimal()
p + coord_flip()
}
waterPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Freshwater.Withdrawals, color = Product)) +
geom_bar(stat="identity", fill="white") + theme_minimal()
p + coord_flip()
}
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7, fill="white") + theme_minimal()
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7) + theme_minimal()
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7, fill=Product) + theme_minimal()
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, color = Product)) +
geom_bar(stat = "identity", width=0.7, fill="white") + theme_minimal()
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
runApp()
landPlot <- function(listProduct) {
single <- simple_df[simple_df$Product %in% listProduct, ]
p<-ggplot(data=single, aes(x=Product, y=Land.Usage, fill = Product)) +
geom_bar(stat = "identity", width=0.7) + theme_minimal()
p + coord_flip()
}
landPlot(c("Wine", "Tofu", "Rapeseed Oil", "Nuts"))
runApp()
runApp()
df <- read.csv("database.csv")
df <- read.csv("./database.csv")
df <- read.csv("database.csv")
setwd("~/Desktop/INFO201/extra")
df <- read.csv("database.csv")
View(df)
View(df)
year <- df %>%
mutate(year <- strsplit(df$Date, " "))
year <- df %>%
mutate(year <- substring(df$Date, 7,11))
View(year)
year <- df %>%
mutate(year <- substring(df$Date, 7,11)) %>%
group_by(year) %>%
count()
year <- df %>%
mutate(year = substring(df$Date, 7,11)) %>%
group_by(year) %>%
count()
View(year)
library("ggplot2")
library("dplyr")
library("plotly")
runApp('~/Desktop/INFO201/info_201_AB05')
ggplot(year aes(x=year, y=n)) +
geom_line()
ggplot(year, aes(x=year, y=n)) +
geom_line()
ggplot(year, aes(x=year, y=n, group = 1)) +
geom_line()
ggplot(year, aes(x=year, y=n, group = 1)) +
scale_x_date(limits = as.Date(c("1965","2016"))) +
geom_line()
ggplot(year, aes(x=year, y=n, group = 1)) +
scale_x_continuous(breaks=seq(1900, 2000, 10)) +
geom_line()
ggplot(year, aes(x=year, y=n, group = 1)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line()
ggplot(year, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1)
year <- df %>%
mutate(year = as.numeric(substring(df$Date, 7,11))) %>%
group_by(year) %>%
count()
year <- df %>%
mutate(year = as.numeric(substring(df$Date, 7,11)), na.rm = TRUE) %>%
group_by(year) %>%
count()
year <- df %>%
mutate(year = as.numeric(substring(df$Date, 7,11), na.rm = TRUE)) %>%
group_by(year) %>%
count()
year <- df %>%
mutate(year = as.numeric(substring(df$Date, 7,11))) %>%
group_by(year) %>%
count()
View(year)
ggplot(year, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1)
View(year)
officalYear <- year[complete.cases(year), ]
View(officalYear)
ggplot(officialYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1)
officalYear <- year[complete.cases(year), ]
ggplot(officialYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1)
ggplot(officalYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1)
map <- list(
scope = "usa",
showland = TRUE,
landcolor = toRGB("gray95"),
countrycolor = toRGB("black")
)
# where are earthquakes??
map <- list(
scope = "usa",
showland = TRUE,
landcolor = toRGB("gray95"),
countrycolor = toRGB("black")
)
shooting_locations <- plot_geo(shootings, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", magnitue),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~num_impacted, symbol = I("circle"), hoverinfo = "text"
)
shooting_locations <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", magnitue),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~num_impacted, symbol = I("circle"), hoverinfo = "text"
)
colorbar(title = "Number of victims") %>%
layout(title = "Shooting incidents in the U.S <br />
hover over circles for more info", geo = map)
library("plotly")
library("ggplot2")
library("dplyr")
library(dplyr)
library(plotly)
library(stringr)
library(formattable)
library(ggplot2)
shooting_locations <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", magnitue),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~num_impacted, symbol = I("circle"), hoverinfo = "text"
)
colorbar(title = "Number of victims") %>%
layout(title = "Shooting incidents in the U.S <br />
hover over circles for more info", geo = map)
shooting_locations <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", magnitue),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~num_impacted, symbol = I("circle"), hoverinfo = "text"
) %>%
colorbar(title = "Number of victims") %>%
layout(title = "Shooting incidents in the U.S <br />
hover over circles for more info", geo = map)
shooting_locations <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~num_impacted, symbol = I("circle"), hoverinfo = "text"
) %>%
colorbar(title = "Number of victims") %>%
layout(title = "Shooting incidents in the U.S <br />
hover over circles for more info", geo = map)
View(df)
shooting_locations <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~num_impacted, symbol = I("circle"), hoverinfo = "text"
) %>%
colorbar(title = "Number of victims") %>%
layout(title = "Shooting incidents in the U.S <br />
hover over circles for more info", geo = map)
shooting_locations <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = "red", symbol = I("circle"), hoverinfo = "text"
) %>%
colorbar(title = "Number of victims") %>%
layout(title = "Shooting incidents in the U.S <br />
hover over circles for more info", geo = map)
View(shooting_locations)
plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = "red", symbol = I("circle"), hoverinfo = "text"
) %>%
colorbar(title = "Number of victims") %>%
layout(title = "Shooting incidents in the U.S <br />
hover over circles for more info", geo = map)
# where are earthquakes??
map <- list(
scope = "world",
showland = TRUE,
landcolor = toRGB("gray95"),
countrycolor = toRGB("black")
)
plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = "red", symbol = I("circle"), hoverinfo = "text"
) %>%
layout(title = "Shooting incidents in the U.S <br />
hover over circles for more info", geo = map)
# where are earthquakes??
map <- list(
scope = "world",
showland = TRUE,
landcolor = toRGB("gray95"),
countrycolor = toRGB("black")
)
plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = "red", symbol = I("circle"), hoverinfo = "text"
) %>%
layout(title = "EARTHQUAKE!", geo = map)
# as the years go, will the number of earthquakes increase?
# Yes and no, it's very unpredicable. But it really fluctuates, but there
# is an upward trend...
year <- df %>%
mutate(year = as.numeric(substring(df$Date, 7,11))) %>%
group_by(year) %>%
count()
officalYear <- year[complete.cases(year), ]
ggplot(officalYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1)
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
year_breakdown <- ggplot(officalYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1) + labs(x = "New x label")
year_breakdown
year_breakdown <- ggplot(officalYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1) + labs(x = "year", y = "# of earthquakes")
year_breakdown
year_breakdown <- ggplot(officalYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1) + labs(x = "year", y = "# of earthquakes",
title = "Number of Earthquakes every year")
year_breakdown
year_breakdown <- ggplot(officalYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1) + labs(x = "year", y = "# of earthquakes",
title = "Number of Earthquakes every year",
caption = "(based on data from ...)")
year_breakdown
year_breakdown <- ggplot(officalYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1) + labs(x = "year", y = "# of earthquakes",
title = "Number of Earthquakes every year",
caption = "(based on data from earthquake database.
which only counts significant earthquakes that have
a magnitude of 5.5 or higher.)")
year_breakdown
year_breakdown <- ggplot(officalYear, aes(x=year, y=n)) +
scale_x_continuous(breaks=seq(1965, 2016, 5)) +
geom_line(group = 1) + labs(x = "year", y = "# of earthquakes",
title = "Number of Earthquakes every year",
caption = "(based on data from earthquake database. which only counts significant earthquakes that have
a magnitude of 5.5 or higher.)")
year_breakdown
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = "red", symbol = I("circle"), hoverinfo = "text"
) %>%
layout(title = "EARTHQUAKE!", geo = map)
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = "red", symbol = I("circle"), hoverinfo = "text"
) %>%
layout(title = "EARTHQUAKE!", geo = map)
map
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = magnitude , symbol = I("circle"), hoverinfo = "text"
) %>%
layout(title = "EARTHQUAKE!", geo = map)
map
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors =~Magnitude , symbol = I("circle"), hoverinfo = "text"
) %>%
layout(title = "EARTHQUAKE!", geo = map)
map
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
colors =~Magnitude , symbol = I("circle"), hoverinfo = "text"
) %>%
layout(title = "EARTHQUAKE!", geo = map)
map
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~Magnitude, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~Magnitude)) %>%
colorbar(title = "Number of victims") %>%
layout(title = "Shooting incidents in the U.S <br />
hover over circles for more info", geo = map)
map
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~Magnitude, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~Magnitude)) %>%
colorbar(title = "Magnitude") %>%ßß
layout(title = "Locations of Earthquakes",
caption = "this is a caption", geo = map)
map
setwd("~/Desktop/INFO201/info_201_AB05")
runApp()
runApp()
df <- read.csv("data/database.csv")
setwd("~/Desktop/INFO201/extra")
df <- read.csv("data/database.csv")
# years plot- displays number of earthquakes happen each year
year <- df %>%
mutate(year = as.numeric(substring(df$Date, 7,11))) %>%
group_by(year) %>%
count()
officalYear <- year[complete.cases(year), ]
# years plot- displays number of earthquakes happen each year
year <- df %>%
mutate(year = as.numeric(substring(df$Date, 7,11))) %>%
group_by(year) %>%
count()
officalYear <- year[complete.cases(year), ]
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~Magnitude, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~Magnitude)) %>%
colorbar(title = "Magnitude") %>%
layout(title = "Locations of Earthq",
caption = "Source: the Lahman baseball database", geo = map)
map
setwd("~/Desktop/INFO201/Earthquake")
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~Magnitude, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~Magnitude)) %>%
colorbar(title = "Magnitude") %>%
layout(title = "Locations of Earthquakes" , geo = map) %>%
labs(caption = "This identifies the location of every earthquake")
map
map <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~Magnitude, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~Magnitude)) %>%
colorbar(title = "Magnitude") %>%
layout(title = "Locations of Earthquakes" , geo = map) %>%
labs(caption = "This identifies the location of every earthquake")
map
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
setwd("~/Desktop/INFO201/Earthquake/docs")
df <- read.csv("./data/database.csv")
df <- read.csv("../data/database.csv")
setwd("~/Desktop/INFO201/info_201_AB05")
runApp()
#Define content for the third page
page_four <- tabPanel(
"Third Page",
sidebarLayout(
sidebarPanel(
checkboxGroupInput("product", "Choose food items:",
choiceNames = productChoices,
choiceValues = productChoices,
selected = c("Poultry Meat", "Apple")
)
),
mainPanel(
plotOutput("water"),
plotOutput("land")
)
)
)
runApp()
setwd("~/Desktop/INFO201/Earthquake/docs")
mapping <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~Magnitude, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~Magnitude)) %>%
colorbar(title = "Magnitude") %>%
layout(title = "Locations of Earthquakes", geo = map) %>%
labs(caption = "This identifies the location of every earthquake")
map
mapping
mapping <- plot_geo(df, lat = ~Latitude, lon = ~Longitude) %>%
add_markers(
text = ~paste("State: ", Magnitude),
colors = c("yellow", "orange", "red", "red2", "red3"),
color = ~Magnitude, symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~Magnitude)) %>%
colorbar(title = "Magnitude") %>%
layout(title = "Locations of Earthquakes", geo = map) %>%
labs(caption = "This identifies the location of every earthquake")
mapping
